generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") //TODO: update DATABASE_URL in .env file
}

model Condition {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String   @unique
  description        String?
  startScreenTitle   String?
  startScreenMessage String?
  chat               Chat[]
  //
  prompt             String //additional Prompt that will be added to the system prompt
  //
  createdAt          DateTime @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime @default(now()) @db.Timestamptz(6)
}

model Chat {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  messages              Message[]
  messageCount          Int?
  averageResponseLength Int?
  //
  condition             Condition @relation(fields: [conditionId], references: [id])
  conditionId           String    @db.Uuid
  responseId            String?
  //
  createdAt             DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime  @default(now()) @db.Timestamptz(6)
}

model Message {
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content   String
  role      MessageRole
  //
  chat      Chat        @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    String      @db.Uuid
  //
  createdAt DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt DateTime    @default(now()) @db.Timestamptz(6)
}

enum MessageRole {
  system
  assistant
  user
}
