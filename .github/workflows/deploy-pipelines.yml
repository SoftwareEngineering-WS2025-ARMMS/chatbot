name: Deploy Chatbot

on:
  push:
    branches:
      - '**'

env:
  CONTAINER_NAME: "${{ github.ref == 'refs/heads/main' && 'armms-pipeline' || 'armms-dev-pipeline' }}"
  CONTAINER_PORT: "${{ github.ref == 'refs/heads/main' && vars.PIPELINES_DEV_PORT || vars.PIPELINES_PROD_PORT }}"

jobs:
  deploy:
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Kill Container if exists
      run: |
        if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
          docker kill $CONTAINER_NAME
        fi
    
    - name: Remove Container if exists
      run: |
        if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
          docker rm $CONTAINER_NAME
        fi
    
    - name: Add env variables
      run: |
        echo "ARMMS_SECRET=${{ secrets.ARMMS_SECRET }}" >> ./src/webui_pipeline/pipelines/.env
        echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> ./src/webui_pipeline/pipelines/.env
        echo "STORAGE_SERVER=${{ vars.STORAGE_SERVER }}" >> ./src/webui_pipeline/pipelines/.env
        echo "CACHE_EXPIRY_SECONDS=${{ vars.CACHE_EXPIRY_SECONDS }}" >> ./src/webui_pipeline/pipelines/.env
        echo "WEAVIATE_PORT=${{ vars.WEAVIATE_PORT }}" >> ./src/webui_pipeline/pipelines/.env
        
        # Production Name
        if [ ${{ github.ref == 'refs/heads/main' }} ] 
        then
          echo "PIPELINE_NAME=armms" >> ./src/webui_pipeline/pipelines/.env
        fi

        # Development Name
        if [ ${{ github.ref != 'refs/heads/main' }} ] 
        then
          echo "PIPELINE_NAME=armms-dev" >> ./src/webui_pipeline/pipelines/.env
        fi

    - name: Build and Deploy Development/Production Container
      run: |
        docker build --build-arg PIPELINES_PORT=$CONTAINER_PORT -t $CONTAINER_NAME ./src/webui_pipeline
        docker run -d --name $CONTAINER_NAME --network=host $CONTAINER_NAME


