name: Deploy Chatbot

on:
  push:
    branches:
      - '**'

jobs:
  deploy:
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Kill Container if exists
      run: |
        if [ "$(docker ps -q -f name=armms-pipeline)" ]; then
          docker kill armms-pipeline
        fi
    
    - name: Remove Container if exists
      run: |
        if [ "$(docker ps -aq -f name=armms-pipeline)" ]; then
          docker rm armms-pipeline
        fi
    
    - name: Add env variables
      run: |
        echo "ARMMS_SECRET=${{ secrets.ARMMS_SECRET }}" >> ./src/webui_pipeline/pipelines/.env
        echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> ./src/webui_pipeline/pipelines/.env
        echo "STORAGE_SERVER=${{ vars.STORAGE_SERVER }}" >> ./src/webui_pipeline/pipelines/.env
        echo "CACHE_EXPIRY_SECONDS=${{ vars.CACHE_EXPIRY_SECONDS }}" >> ./src/webui_pipeline/pipelines/.env
        echo "WEAVIATE_PORT=${{ vars.WEAVIATE_PORT }}" >> ./src/webui_pipeline/pipelines/.env
        if ${{ github.ref == 'refs/heads/main' }} then
          echo "PIPELINE_NAME=armms" >> ./src/webui_pipeline/pipelines/.env
        fi
        if ${{ github.ref != 'refs/heads/main' }} then
          echo "PIPELINE_NAME=armms-dev" >> ./src/webui_pipeline/pipelines/.env
        fi

    - name: Build and Deploy Development/Production Container
      run: |
        if ${{ github.ref == 'refs/heads/main' }} then
          docker build -t --build-arg PIPELINES_PORT=${{ vars.PIPELINES_PROD_PORT }}" armms-pipeline ./src/webui_pipeline
          docker run -d --name armms-pipeline --network=host armms-pipeline
        fi
        
        # Development Container
        if ${{ github.ref != 'refs/heads/main' }} then
          docker build -t --build-arg PIPELINES_PORT=${{ vars.PIPELINES_DEV_PORT }}" armms-dev-pipeline ./src/webui_pipeline
          docker run -d --name armms-dev-pipeline --network=host armms-dev-pipeline        
        fi

